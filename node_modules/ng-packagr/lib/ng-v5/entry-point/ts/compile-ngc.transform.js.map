{"version":3,"file":"compile-ngc.transform.js","sourceRoot":"","sources":["../../../../../src/lib/ng-v5/entry-point/ts/compile-ngc.transform.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,wDAA2E;AAC3E,4EAAuE;AACvE,yCAAyC;AACzC,6DAAoE;AAEvD,QAAA,mBAAmB,GAAc,gCAAoB,CAAC,CAAM,KAAK,EAAC,EAAE;IAC/E,GAAG,CAAC,IAAI,CAAC,0CAA0C,CAAC,CAAC;IACrD,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,+BAAY,EAAE,CAAC,GAAG,CAAC,+BAAY,CAAC,CAAC,CAAC;IAEhE,6BAA6B;IAC7B,MAAM,iBAAiB,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;IACpD,MAAM,iBAAiB,GAAG,MAAM,yCAAkB,CAChD,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EACrC,UAAU,CAAC,IAAI,CAAC,QAAQ,EACxB,UAAU,CAAC,IAAI,CAAC,MAAM,CACvB,CAAC;IACF,iBAAiB,CAAC,OAAO,EAAE,CAAC;IAE5B,oFAAoF;IACpF,UAAU,CAAC,IAAI,CAAC,eAAe,GAAG,iBAAiB,CAAC,EAAE,CAAC;IACvD,UAAU,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC,OAAO,CAAC;IACpD,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC;IAEtD,MAAM,CAAC,KAAK,CAAC;AACf,CAAC,CAAA,CAAC,CAAC","sourcesContent":["import { Transform, transformFromPromise } from '../../../brocc/transform';\nimport { compileSourceFiles } from '../../../ngc/compile-source-files';\nimport * as log from '../../../util/log';\nimport { byEntryPoint, isInProgress } from '../../entry-point.node';\n\nexport const compileNgcTransform: Transform = transformFromPromise(async graph => {\n  log.info(`Compiling TypeScript sources through ngc`);\n  const entryPoint = graph.find(byEntryPoint().and(isInProgress));\n\n  // Compile TypeScript sources\n  const previousTransform = entryPoint.data.tsSources;\n  const compilationResult = await compileSourceFiles(\n    entryPoint.data.tsSources.transformed,\n    entryPoint.data.tsConfig,\n    entryPoint.data.outDir\n  );\n  previousTransform.dispose();\n\n  // Store compilation result on the graph for further processing (`writeFlatBundles`)\n  entryPoint.data.es2015EntryFile = compilationResult.js;\n  entryPoint.data.typings = compilationResult.typings;\n  entryPoint.data.metadata = compilationResult.metadata;\n\n  return graph;\n});\n"]}