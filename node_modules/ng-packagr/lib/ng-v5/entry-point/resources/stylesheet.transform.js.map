{"version":3,"file":"stylesheet.transform.js","sourceRoot":"","sources":["../../../../../src/lib/ng-v5/entry-point/resources/stylesheet.transform.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs-extra';\nimport * as path from 'path';\nimport stripBom = require('strip-bom');\nimport { Transform, transformFromPromise } from '../../../brocc/transform';\nimport { NgEntryPoint, CssUrl } from '../../../ng-package-format/entry-point';\nimport * as log from '../../../util/log';\nimport { byEntryPoint, isInProgress } from '../../entry-point.node';\n\n// CSS Tools\nimport * as autoprefixer from 'autoprefixer';\nimport * as browserslist from 'browserslist';\nimport * as postcss from 'postcss';\nimport * as sass from 'node-sass';\nimport * as nodeSassTildeImporter from 'node-sass-tilde-importer';\nimport * as less from 'less';\nimport * as stylus from 'stylus';\nimport * as postcssUrl from 'postcss-url';\nimport * as postcssComments from 'postcss-discard-comments';\n\nexport const stylesheetTransform: Transform = transformFromPromise(async graph => {\n  log.info(`Rendering Stylesheets`);\n\n  // TODO: fetch current entry point from graph\n  const entryPoint = graph.find(byEntryPoint().and(isInProgress));\n\n  // TODO: fetch nodes from the graph\n  const stylesheetNodes = graph.from(entryPoint).filter(node => node.type === 'text/css' && node.state !== 'done');\n\n  // TODO: detemrine base path from NgPackage\n  const ngPkg = graph.find(node => node.type === 'application/ng-package');\n  const basePath: string = ngPkg.data.basePath;\n\n  await Promise.all(\n    stylesheetNodes.map(async stylesheetNode => {\n      const filePath: string = stylesheetNode.url.substring('file://'.length);\n\n      // preprocessor (render)\n      const renderedCss: string = await renderPreProcessor(filePath, basePath, entryPoint.data.entryPoint);\n\n      // postcss (autoprefixing, et al)\n      const result: string = await renderPostCss(filePath, renderedCss, entryPoint.data.entryPoint.cssUrl);\n\n      // TODO: update nodes in the graph\n      stylesheetNode.data = {\n        ...stylesheetNode.data,\n        content: result\n      };\n    })\n  );\n\n  // TODO: await forEach() ?!?\n\n  return graph;\n});\n\nasync function renderPostCss(filePath: string, cssStyles: string, cssUrl: CssUrl): Promise<string> {\n  log.debug(`determine browserslist for ${filePath}`);\n  const browsers = browserslist(undefined, { filePath });\n\n  const postCssPlugins = [autoprefixer({ browsers }), postcssComments({ removeAll: true })];\n\n  if (cssUrl !== CssUrl.none) {\n    log.debug(`postcssUrl: ${cssUrl}`);\n    postCssPlugins.push(postcssUrl({ url: cssUrl }));\n  }\n\n  const result: postcss.Result = await postcss(postCssPlugins).process(cssStyles, {\n    from: filePath,\n    to: filePath.replace(path.extname(filePath), '.css')\n  });\n\n  // Escape existing backslashes for the final output into a string literal, which would otherwise escape the character after it\n  result.css = result.css.replace(/\\\\/g, '\\\\\\\\');\n\n  // Log warnings from postcss\n  result.warnings().forEach(msg => {\n    log.warn(msg.toString());\n  });\n\n  return result.css;\n}\n\nasync function renderPreProcessor(filePath: string, basePath: string, entryPoint: NgEntryPoint): Promise<string> {\n  log.debug(`Render styles for ${filePath}`);\n  switch (path.extname(filePath)) {\n    case '.scss':\n    case '.sass':\n      log.debug(`rendering sass from ${filePath}`);\n      return renderSass({\n        file: filePath,\n        importer: nodeSassTildeImporter,\n        includePaths: entryPoint.sassIncludePaths\n      });\n\n    case '.less':\n      log.debug(`rendering less from ${filePath}`);\n      return renderLess({ filename: filePath });\n\n    case '.styl':\n    case '.stylus':\n      log.debug(`rendering styl from ${filePath}`);\n      return renderStylus({ filename: filePath, root: basePath });\n\n    case '.css':\n    default:\n      log.debug(`reading css from ${filePath}`);\n      return fs.readFile(filePath).then(buffer => stripBom(buffer.toString()));\n  }\n}\n\nconst renderSass = (sassOpts: any): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    sass.render(sassOpts, (err, result) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(result.css.toString());\n      }\n    });\n  });\n};\n\nconst renderLess = (lessOpts: any): Promise<string> => {\n  return fs\n    .readFile(lessOpts.filename)\n    .then(buffer => stripBom(buffer.toString()))\n    .then(\n      (lessData: string) =>\n        new Promise<string>((resolve, reject) => {\n          less.render(lessData || '', lessOpts, (err, result) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(result.css.toString());\n            }\n          });\n        })\n    );\n};\n\n/**\n * filename - absolute path to file\n * root - root folder of project (where ng-package.json is located)\n */\nconst renderStylus = ({ filename, root }): Promise<string> => {\n  return fs\n    .readFile(filename)\n    .then(buffer => stripBom(buffer.toString()))\n    .then(\n      (stylusData: string) =>\n        new Promise<string>((resolve, reject) => {\n          stylus(stylusData)\n            // add paths for resolve\n            .include(root)\n            .include('.')\n            // add support for resolving plugins from node_modules\n            .include('node_modules')\n            .set('filename', filename)\n            // turn on url resolver in stylus, same as flag --resolve-url\n            .set('resolve url', true)\n            .define('url', stylus.resolver())\n            .render((err, css) => {\n              if (err) {\n                reject(err);\n              } else {\n                resolve(css);\n              }\n            });\n        })\n    );\n};\n"]}