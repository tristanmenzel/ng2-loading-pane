{"version":3,"file":"relocate-source-maps.transform.js","sourceRoot":"","sources":["../../../../src/lib/ng-v5/entry-point/relocate-source-maps.transform.ts"],"names":[],"mappings":";;;;;;;;;;AAMA,qDAAwE;AAExE,wDAA+D;AAC/D,sCAAsC;AACtC,0DAAiE;AAEpD,QAAA,2BAA2B,GAAc,gCAAoB,CAAC,CAAM,KAAK,EAAC,EAAE;IACvF,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,+BAAY,EAAE,CAAC,GAAG,CAAC,+BAAY,CAAC,CAAC,CAAC;IAChE,MAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC1C,MAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;IAErD,qCAAqC;IACrC,GAAG,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;IACnC,MAAM,QAAQ,GAAG,6BAAkB,CAAC,GAAG,QAAQ,sCAAsC,EAAE,IAAI,CAAC,EAAE;QAC5F,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,qCAAqC;QACrC,OAAO,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;YACrC,WAAW,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACzC,CAAC;QAED,MAAM,CAAC,QAAQ,QAAQ,IAAI,WAAW,EAAE,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,KAAK,CAAC;AACf,CAAC,CAAA,CAAC,CAAC","sourcesContent":["import { map, switchMap } from 'rxjs/operators';\nimport { of as observableOf } from 'rxjs/observable/of';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { pipe } from 'rxjs/util/pipe';\nimport { BuildGraph } from '../../brocc/build-graph';\nimport { Node } from '../../brocc/node';\nimport { Transform, transformFromPromise } from '../../brocc/transform';\nimport { writeFlatBundleFiles, FlattenOpts } from '../../flatten/flatten';\nimport { relocateSourceMaps } from '../../sourcemaps/relocate';\nimport * as log from '../../util/log';\nimport { byEntryPoint, isInProgress } from '../entry-point.node';\n\nexport const relocateSourceMapsTransform: Transform = transformFromPromise(async graph => {\n  const entryPoint = graph.find(byEntryPoint().and(isInProgress));\n  const stageDir = entryPoint.data.stageDir;\n  const moduleId = entryPoint.data.entryPoint.moduleId;\n\n  // 4. SOURCEMAPS: RELOCATE ROOT PATHS\n  log.info('Relocating source maps');\n  const relocate = relocateSourceMaps(`${stageDir}/+(bundles|esm2015|esm5)/**/*.js.map`, path => {\n    let trimmedPath = path;\n    // Trim leading '../' path separators\n    while (trimmedPath.startsWith('../')) {\n      trimmedPath = trimmedPath.substring(3);\n    }\n\n    return `ng://${moduleId}/${trimmedPath}`;\n  });\n\n  return graph;\n});\n"]}