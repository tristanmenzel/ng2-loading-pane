{"version":3,"file":"write-bundles.transform.js","sourceRoot":"","sources":["../../../../src/lib/ng-v5/entry-point/write-bundles.transform.ts"],"names":[],"mappings":";;AAAA,8CAAgD;AAEhD,6DAA0D;AAC1D,yCAAsC;AAItC,mDAA0E;AAC1E,0DAAiE;AAGpD,QAAA,qBAAqB,GAAc,WAAI,CAClD,qBAAS,CAAC,KAAK,CAAC,EAAE;IAChB,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,+BAAY,EAAE,CAAC,GAAG,CAAC,+BAAY,CAAC,CAAC,CAAC;IAChE,MAAM,YAAY,GAAiB,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC;IAE9D,MAAM,IAAI,GAAgB;QACxB,SAAS,EAAE,UAAU,CAAC,IAAI,CAAC,eAAe;QAC1C,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC,QAAQ;QAChC,cAAc,EAAE,YAAY,CAAC,cAAc;QAC3C,WAAW,EAAE,YAAY,CAAC,QAAQ;QAClC,WAAW,EAAE,YAAY,CAAC,WAAW;QACrC,YAAY,EAAE,YAAY,CAAC,YAAY;QACvC,QAAQ,EAAE,YAAY,CAAC,QAAQ;QAC/B,QAAQ,EAAE,YAAY,CAAC,QAAQ;QAC/B,WAAW,EAAE,YAAY,CAAC,WAAW;KACtC,CAAC;IAEF,MAAM,CAAC,yBAAW,CAAC,8BAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAG,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CACH,CAAC","sourcesContent":["import { map, switchMap } from 'rxjs/operators';\nimport { of as observableOf } from 'rxjs/observable/of';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { pipe } from 'rxjs/util/pipe';\nimport { BuildGraph } from '../../brocc/build-graph';\nimport { Node } from '../../brocc/node';\nimport { Transform } from '../../brocc/transform';\nimport { writeFlatBundleFiles, FlattenOpts } from '../../flatten/flatten';\nimport { byEntryPoint, isInProgress } from '../entry-point.node';\nimport { NgEntryPoint } from '../../ng-package-format/entry-point';\n\nexport const writeBundlesTransform: Transform = pipe(\n  switchMap(graph => {\n    const entryPoint = graph.find(byEntryPoint().and(isInProgress));\n    const ngEntryPoint: NgEntryPoint = entryPoint.data.entryPoint;\n\n    const opts: FlattenOpts = {\n      entryFile: entryPoint.data.es2015EntryFile,\n      outDir: entryPoint.data.stageDir,\n      flatModuleFile: ngEntryPoint.flatModuleFile,\n      esmModuleId: ngEntryPoint.moduleId,\n      umdModuleId: ngEntryPoint.umdModuleId,\n      umdModuleIds: ngEntryPoint.umdModuleIds,\n      embedded: ngEntryPoint.embedded,\n      comments: ngEntryPoint.comments,\n      licensePath: ngEntryPoint.licensePath\n    };\n\n    return fromPromise(writeFlatBundleFiles(opts)).pipe(map(() => graph));\n  })\n);\n"]}