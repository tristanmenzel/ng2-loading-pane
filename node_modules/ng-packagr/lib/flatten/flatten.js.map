{"version":3,"file":"flatten.js","sourceRoot":"","sources":["../../../src/lib/flatten/flatten.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,6BAA6B;AAC7B,+CAAqD;AACrD,mCAAmC;AACnC,qCAA4C;AAC5C,+BAAyC;AACzC,qCAAwC;AAkBxC,8BAA2C,IAAiB;;QAC1D,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC/B,MAAM,UAAU,GAAG,MAAM,eAAe,CAAC,IAAI,CAAC,CAAC;QAC/C,MAAM,sBAAc,CAAC,UAAU,CAAC,CAAC;QAEjC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC9B,MAAM,SAAS,GAAG,MAAM,cAAc,mBAAM,IAAI,IAAE,SAAS,EAAE,UAAU,IAAG,CAAC;QAC3E,MAAM,sBAAc,CAAC,SAAS,CAAC,CAAC;QAEhC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC5B,MAAM,OAAO,GAAG,MAAM,YAAY,mBAAM,IAAI,IAAE,SAAS,EAAE,SAAS,IAAG,CAAC;QACtE,MAAM,sBAAc,CAAC,OAAO,CAAC,CAAC;QAE9B,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACjC,MAAM,UAAU,GAAG,MAAM,eAAe,mBAAM,IAAI,IAAE,SAAS,EAAE,OAAO,IAAG,CAAC;QAC1E,MAAM,sBAAc,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;CAAA;AAhBD,oDAgBC;AAED,yBAAsC,IAAiB;;QACrD,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC;QAEnF,MAAM,yBAAgB,CAAC;YACrB,UAAU,EAAE,IAAI,CAAC,WAAW;YAC5B,KAAK,EAAE,IAAI,CAAC,SAAS;YACrB,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,WAAW,EAAE,IAAI,CAAC,WAAW;SAC9B,CAAC,CAAC;QAEH,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;CAAA;AAdD,0CAcC;AAED,wBAAqC,IAAiB;;QACpD,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC;QAEhF,MAAM,sBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAEjD,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;CAAA;AAND,wCAMC;AAED,sBAAmC,IAAiB;;QAClD,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC,CAAC;QACvF,MAAM,EAAE,QAAQ,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC;QAE/B,MAAM,yBAAgB,CAAC;YACrB,UAAU,EAAE,IAAI,CAAC,WAAW;YAC5B,KAAK,EAAE,IAAI,CAAC,SAAS;YACrB,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,QAAQ;YACd,YAAY,oBACP,IAAI,CAAC,YAAY,CACrB;YACD,QAAQ,EAAE,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC;YAChC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,WAAW,EAAE,IAAI,CAAC,WAAW;SAC9B,CAAC,CAAC;QAEH,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;CAAA;AAlBD,oCAkBC;AAED,yBAAsC,IAAiB;;QACrD,MAAM,CAAC,qBAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;CAAA;AAFD,0CAEC","sourcesContent":["import * as path from 'path';\nimport { remapSourceMap } from '../sourcemaps/remap';\nimport * as log from '../util/log';\nimport { rollupBundleFile } from './rollup';\nimport { downlevelWithTsc } from './tsc';\nimport { minifyJsFile } from './uglify';\n\nexport interface FlattenOpts {\n  entryFile: string;\n  outDir: string;\n  flatModuleFile: string;\n  esmModuleId: string;\n  umdModuleId: string;\n  comments: string;\n  licensePath: string;\n\n  /** List of module ids that should be embedded to the bundle. */\n  embedded?: string[];\n\n  /** Map of external UMD module ids that  */\n  umdModuleIds?: { [key: string]: string };\n}\n\nexport async function writeFlatBundleFiles(opts: FlattenOpts) {\n  log.info('Bundling to FESM15');\n  const fesm15File = await flattenToFesm15(opts);\n  await remapSourceMap(fesm15File);\n\n  log.info('Bundling to FESM5');\n  const fesm5File = await flattenToFesm5({ ...opts, entryFile: fesm15File });\n  await remapSourceMap(fesm5File);\n\n  log.info('Bundling to UMD');\n  const umdFile = await flattenToUmd({ ...opts, entryFile: fesm5File });\n  await remapSourceMap(umdFile);\n\n  log.info('Minifying UMD bundle');\n  const minUmdFile = await flattenToUmdMin({ ...opts, entryFile: umdFile });\n  await remapSourceMap(minUmdFile);\n}\n\nexport async function flattenToFesm15(opts: FlattenOpts): Promise<string> {\n  const destFile = path.resolve(opts.outDir, 'esm2015', opts.flatModuleFile + '.js');\n\n  await rollupBundleFile({\n    moduleName: opts.esmModuleId,\n    entry: opts.entryFile,\n    format: 'es',\n    dest: destFile,\n    embedded: opts.embedded,\n    comments: opts.comments,\n    licensePath: opts.licensePath\n  });\n\n  return destFile;\n}\n\nexport async function flattenToFesm5(opts: FlattenOpts): Promise<string> {\n  const destFile = path.resolve(opts.outDir, 'esm5', opts.flatModuleFile + '.js');\n\n  await downlevelWithTsc(opts.entryFile, destFile);\n\n  return destFile;\n}\n\nexport async function flattenToUmd(opts: FlattenOpts): Promise<string> {\n  const destFile = path.resolve(opts.outDir, 'bundles', opts.flatModuleFile + '.umd.js');\n  const { embedded = [] } = opts;\n\n  await rollupBundleFile({\n    moduleName: opts.umdModuleId,\n    entry: opts.entryFile,\n    format: 'umd',\n    dest: destFile,\n    umdModuleIds: {\n      ...opts.umdModuleIds\n    },\n    embedded: ['tslib', ...embedded],\n    comments: opts.comments,\n    licensePath: opts.licensePath\n  });\n\n  return destFile;\n}\n\nexport async function flattenToUmdMin(opts: FlattenOpts): Promise<string> {\n  return minifyJsFile(opts.entryFile);\n}\n"]}