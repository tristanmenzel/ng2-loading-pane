{"version":3,"file":"copy.js","sourceRoot":"","sources":["../../../src/lib/util/copy.ts"],"names":[],"mappings":";;AAAA,6BAAyC;AACzC,2CAAwC;AACxC,+BAA8B;AAEjB,QAAA,SAAS,GAAG,CAAC,GAAW,EAAE,IAAY,EAAE,OAAsB,EAAiB,EAAE;IAC5F,WAAK,CAAC,iBAAiB,GAAG,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC;IAC/C,MAAM,CAAC,qBAAS,CAAO,CAAC,eAAe,EAAE,EAAE;QACzC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,UAAI,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;QAC5C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,UAAI,CAAC,GAAG,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC;QACnC,CAAC;IACH,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC","sourcesContent":["import { copy, AsyncOptions } from 'cpx';\nimport { promisify } from './promisify';\nimport { debug } from './log';\n\nexport const copyFiles = (src: string, dest: string, options?: AsyncOptions): Promise<void> => {\n  debug('copyFiles from ' + src + ' to ' + dest);\n  return promisify<void>((resolveOrReject) => {\n    if (options) {\n      copy(src, dest, options, resolveOrReject);\n    } else {\n      copy(src, dest, resolveOrReject);\n    }\n  });\n\n};\n"]}